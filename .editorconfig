root = true

# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = 4
indent_style = space
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = true
max_line_length = 140

#### .NET Coding Conventions ####
dotnet_analyzer_diagnostic.category-Performance.severity = warning
dotnet_analyzer_diagnostic.category-Style.severity = warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = 0

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false:none
csharp_style_var_for_built_in_types = true
csharp_style_var_when_type_is_apparent = true
csharp_for_simple_types = use_var
csharp_for_built_in_types = use_var
csharp_for_other_types = use_var_when_evident

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = true
csharp_style_expression_bodied_methods = when_on_single_line
csharp_style_expression_bodied_operators = true
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true
csharp_style_prefer_parameter_null_checking = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

# Code-block preferences
csharp_prefer_braces = when_multiline
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = file_scoped
csharp_style_prefer_method_group_conversion = true

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_prefer_tuple_swap = true
csharp_style_throw_expression = true

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Naming styles
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_rule.private_members_with_underscore.symbols = private_fields
dotnet_naming_rule.private_members_with_underscore.style = prefix_underscore
dotnet_naming_rule.private_members_with_underscore.severity = warning
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.symbols = private_static_readonly_fields
dotnet_naming_rule.private_static_readonly_fields_should_be_pascal_case.style = pascal_case

dotnet_naming_symbols.private_fields.applicable_kinds = field
dotnet_naming_symbols.private_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.applicable_kinds = field
dotnet_naming_symbols.private_static_readonly_fields.applicable_accessibilities = private
dotnet_naming_symbols.private_static_readonly_fields.required_modifiers = readonly, static

dotnet_naming_style.prefix_underscore.capitalization = camel_case
dotnet_naming_style.prefix_underscore.required_prefix = _

# ReSharper properties
csharp_align_multiline_binary_expressions_chain = false
csharp_align_multiline_statement_conditions = false
csharp_arguments_other = positional
csharp_braces_for_dowhile = required
csharp_braces_for_fixed = required
csharp_braces_for_ifelse = required_for_multiline_statement
csharp_braces_for_for = required
csharp_braces_for_foreach = required
csharp_braces_for_lock = required_for_multiline_statement
csharp_braces_for_using = required_for_multiline_statement
csharp_braces_for_while = required
csharp_braces_redundant = true
csharp_for_simple_types = use_var
csharp_for_built_in_types = use_var
csharp_for_other_types = use_var
csharp_indent_method_decl_pars = inside
csharp_indent_invocation_pars = inside
csharp_indent_statement_pars = inside
csharp_indent_pars = inside
csharp_keep_existing_attribute_arrangement = false
csharp_keep_existing_embedded_arrangement = true
csharp_keep_existing_embedded_block_arrangement = true
csharp_keep_existing_expr_member_arrangement = false
csharp_keep_existing_initializer_arrangement = true
csharp_keep_existing_list_patterns_arrangement = true
csharp_max_array_initializer_elements_on_line = 3
csharp_max_attribute_length_for_same_line = 120
csharp_max_initializer_elements_on_line = 1
csharp_method_or_operator_body = expression_body
csharp_place_accessorholder_attribute_on_same_line = false
csharp_place_expr_accessor_on_single_line = true
csharp_place_expr_method_on_single_line = if_owner_is_single_line
csharp_place_expr_property_on_single_line = true
csharp_place_field_attribute_on_same_line = false
csharp_place_simple_embedded_statement_on_same_line = false
csharp_place_simple_initializer_on_single_line = true
csharp_space_before_array_rank_brackets = false
csharp_space_within_single_line_array_initializer_braces = true
csharp_use_heuristics_for_body_style = true
csharp_wrap_after_declaration_lpar = true
csharp_wrap_after_invocation_lpar = true
csharp_wrap_after_property_in_chained_method_calls = true
csharp_wrap_arguments_style = chop_if_long
csharp_wrap_array_initializer_style = chop_if_long
csharp_wrap_before_arrow_with_expressions = false
csharp_wrap_before_binary_opsign = true
csharp_wrap_before_comma = false
csharp_wrap_before_declaration_rpar = true
csharp_wrap_before_eq = false
csharp_wrap_before_extends_colon = true
csharp_wrap_before_binary_pattern_op = true
csharp_wrap_before_first_method_call = false
csharp_wrap_before_first_type_parameter_constraint = true
csharp_wrap_before_invocation_lpar = false
csharp_wrap_before_invocation_rpar = true
csharp_wrap_before_linq_expression = true
csharp_wrap_before_primary_constructor_declaration_lpar = false
csharp_wrap_before_primary_constructor_declaration_rpar = true
csharp_wrap_before_ternary_opsigns = true
csharp_wrap_before_type_parameter_langle = false
csharp_wrap_chained_binary_expressions = chop_if_long
csharp_wrap_chained_binary_patterns = chop_if_long
csharp_wrap_chained_method_calls = chop_if_long
csharp_wrap_list_pattern = chop_if_long
csharp_wrap_object_and_collection_initializer_style = chop_if_long
csharp_wrap_parameters_style = chop_if_long
csharp_wrap_property_pattern = chop_if_long
csharp_wrap_ternary_expr_style = chop_if_long

[*.{cs,vb}]
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
end_of_line = crlf
dotnet_style_coalesce_expression = true
dotnet_style_null_propagation = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_auto_properties = true
dotnet_style_object_initializer = true
dotnet_style_collection_initializer = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_explicit_tuple_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_simplified_interpolation = true
dotnet_style_namespace_match_folder = true
dotnet_style_readonly_field = true
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true
dotnet_style_require_accessibility_modifiers = for_non_interface_members
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true
dotnet_code_quality_unused_parameters = all
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_property = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_event = false

# Disable false alarms
[*.{cs,vb}]
dotnet_diagnostic.IDE0010.severity = none
dotnet_diagnostic.IDE0022.severity = none
dotnet_diagnostic.IDE0046.severity = none
dotnet_diagnostic.IDE0051.severity = none
dotnet_diagnostic.IDE0058.severity = none
dotnet_diagnostic.IDE0060.severity = none
dotnet_diagnostic.IDE0072.severity = none
dotnet_diagnostic.CA1848.severity = none
dotnet_diagnostic.CA1859.severity = none
dotnet_diagnostic.CA2208.severity = none

# Make internal classes sealed by default
dotnet_diagnostic.CA1852.severity = warning
# Class with no virtual dispose method should be sealed
dotnet_diagnostic.IDISP025.severity = warning
# Class with no virtual DisposeAsyncCore method should be sealed
dotnet_diagnostic.IDISP026.severity = warning
# Do not declare protected members in sealed types
dotnet_diagnostic.CA1047.severity = warning

resharper_class_can_be_sealed_global_highlighting = warning
resharper_class_can_be_sealed_global_highlighting = warning
resharper_use_collection_expression_highlighting = warning

# Visual Studio Solution Files
[*.sln]
indent_style = tab

# Visual Studio XML Project Files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2
